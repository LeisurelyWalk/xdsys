<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xd.sys.mapper.CoursesMapper" >
  <resultMap id="BaseResultMap" type="com.xd.sys.po.Courses" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="courseName" property="coursename" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="teacher" property="teacher" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="CHAR" />
    <result column="students" property="students" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xd.sys.po.Courses" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, courseName, credit, teacher, address, students
  </sql>
  <sql id="Blob_Column_List" >
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xd.sys.po.CoursesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xd.sys.po.CoursesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from courses
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from courses
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xd.sys.po.CoursesExample" >
    delete from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xd.sys.po.Courses" >
    insert into courses (id, courseName, credit, 
      teacher, address, students, 
      introduction)
    values (#{id,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, 
      #{teacher,jdbcType=CHAR}, #{address,jdbcType=CHAR}, #{students,jdbcType=CHAR}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xd.sys.po.Courses" >
    insert into courses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coursename != null" >
        courseName,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="students != null" >
        students,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=CHAR},
      </if>
      <if test="students != null" >
        #{students,jdbcType=CHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xd.sys.po.CoursesExample" resultType="java.lang.Integer" >
    select count(*) from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update courses
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null" >
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=CHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=CHAR},
      </if>
      <if test="record.students != null" >
        students = #{record.students,jdbcType=CHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="selectByCourse" parameterType="java.lang.String" resultType="com.xd.sys.po.Courses" >
    select * from courses where students LIKE '%${name}%'
  </select>
  
  
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update courses
    set id = #{record.id,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=CHAR},
      address = #{record.address,jdbcType=CHAR},
      students = #{record.students,jdbcType=CHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update courses
    set id = #{record.id,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=CHAR},
      address = #{record.address,jdbcType=CHAR},
      students = #{record.students,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xd.sys.po.Courses" >
    update courses
    <set >
      <if test="coursename != null" >
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="students != null" >
        students = #{students,jdbcType=CHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xd.sys.po.Courses" >
    update courses
    set courseName = #{coursename,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      students = #{students,jdbcType=CHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xd.sys.po.Courses" >
    update courses
    set courseName = #{coursename,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      students = #{students,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>